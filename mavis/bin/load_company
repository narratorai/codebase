#! /usr/bin/env bash

# Runs a python repl with some globals pre-loaded, history completion,
# and more!

set -e

# Run this with ./bin/load_company <company>
if [ "$1" != "" ]; then
    COMPANY=$1
else
    echo "Must be called with a company slug as its first argument"
    exit 1
fi

echo "> Loading company $COMPANY ..."

mkdir -p ".tmp/load_company_history"
touch ".tmp/load_company_history/$COMPANY"

STARTUP_SCRIPT_DIR=$(mktemp -d)

cat << EOF > "$STARTUP_SCRIPT_DIR/load_company.py"
# This file was autogenerated by $0 at $(date) for $COMPANY

import sys
import atexit
import readline
import rlcompleter
from pathlib import Path

global __company_slug
__company_slug = '$COMPANY'

# Setup REPL History
__history_path = Path(f'./.tmp/load_company_history/{__company_slug}').resolve()

def __save_history():
    readline.write_history_file(__history_path)
if __history_path.exists():
    readline.read_history_file(__history_path)
atexit.register(__save_history)

# Add root to the python path
sys.path.append(str(Path('.').resolve()))

# Set up a mavis environment in the console
# This is called on init, and is available in the console to reload changes
def reload():
    import sys
    import importlib
    from pathlib import Path

    global company_slug
    global settings
    global company
    global mavis

    modules_to_reload = set([key for key in sys.modules.copy() if key.startswith(('core', 'batch_jobs'))])

    importlib.invalidate_caches()
    if len(modules_to_reload) > 0:
      print(f'reloading {", ".join(sorted(modules_to_reload))}')
    for key in modules_to_reload:
        try:
            importlib.reload(sys.modules[key])
        except:
            print(f'! failed to reload {key}')
            print(sys.exc_info())
            continue
    importlib.invalidate_caches()

    from core.v4.mavis import initialize_mavis
    from core.models.settings import Settings

    settings = Settings()
    mavis = initialize_mavis(__company_slug)

    print(f'''>\t Loaded company $COMPANY
>>\t mavis are globals
>>\t call reload() when code changes''')

# Go
reload()

# Cleanup
del sys, atexit, Path, __save_history
EOF

STAGE=local PYTHONSTARTUP="$STARTUP_SCRIPT_DIR/load_company.py" COMPANY_SLUG="$COMPANY" python
