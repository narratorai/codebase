#! /usr/bin/env python3
import re
import sys
from pathlib import Path

from gql import gql

filenames = sys.argv[1:]


def camel_to_snake(name):
    name = re.sub("(.)([A-Z][a-z]+)", r"\1_\2", name)
    return re.sub("([a-z0-9])([A-Z])", r"\1_\2", name).lower()


for file in filenames:
    filepath = Path(file)

    with open(filepath, "r") as f:
        file = f.read().strip()
        query = gql(file)

        if len(query.definitions) != 1:
            print(f"{filepath} can only contain one graph query or mutation")
            sys.exit(1)

        if query.definitions[0].operation == "subscription":
            print("Mavis does not support graph subscriptions at this time")
            sys.exit(1)

        query_name = query.definitions[0].name.value

        if query_name != filepath.stem:
            print(
                f"Invalid graph query in {filepath} named {query_name}. The query in the file must match the file name and should be named {filepath.stem}"
            )
            sys.exit(1)

        codegen_filepath = Path(f"{filepath.parent.parent}/sync_client/{camel_to_snake(filepath.stem)}")
        if not codegen_filepath.with_suffix(".py").is_file():
            print(
                f"Graph query in {filepath} is missing python counterpart. Have you run codegen? `./scripts/graph_codegen.sh`"
            )
            sys.exit(1)
