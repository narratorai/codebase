dex:
  enabled: false # Disable dex since we are not using

redis-ha:
  enabled: true

controller:
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::479493230127:role/mgmt-argocd-hub
  replicas: 1 # Additional replicas will cause sharding of managed clusters across number of replicas.
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: true

server:
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::479493230127:role/mgmt-argocd-hub
  autoscaling:
    enabled: true
    minReplicas: 2
  service:
    type: NodePort
    nodePortHttp: 30080
    nodePortHttps: 30443
    servicePortHttp: 80
    servicePortHttps: 443
    servicePortHttpName: http
    servicePortHttpsName: https
  ingress:
    enabled: true
    ingressClassName: "alb"
    annotations:
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:479493230127:certificate/ec091358-4fb1-4bce-9637-b9a135f17eb1
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS":443}]'
      external-dns.alpha.kubernetes.io/hostname: argocd.private.mgmt.narrator.ai
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/backend-protocol: HTTPS
    hosts:
      - argocd.private.mgmt.narrator.ai
    tls:
      - hosts:
          - argocd.private.mgmt.narrator.ai
    https: true
    extraPaths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation

  ingressGrpc:
    enabled: true
    isAWSALB: true
    annotations:
      alb.ingress.kubernetes.io/backend-protocol-version: GRPC
      alb.ingress.kubernetes.io/conditions.argogrpc: |
        [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
    labels: {}
    ingressClassName: ""
    awsALB:
      serviceType: ClusterIP
    hosts:
      - argocd.private.mgmt.narrator.ai
    paths:
      - /
    pathType: ImplementationSpecific
    extraPaths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argo.cd-argocd-server-grpc
            port:
              number: 443
    tls:
      []
    https: true

    url: https://argocd.private.mgmt.narrator.ai
    timeout.reconciliation: "600"
    statusbadge.enabled: "true"

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2

configs:
  params:
    application.namespaces: "*"
  cm:
    accounts.image-updater: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhcmdvY2QiLCJzdWIiOiJuZXN0b3JhczphcGlLZXkiLCJuYmYiOjE2OTIyMDA1NTgsImlhdCI6MTY5MjIwMDU1OCwianRpIjoiNzBhZGE1ODAtOGI4ZC00NjI1LTk4ODEtZmFkZGMxYjRjNmFjIn0.xxbnozyRuDVIAdF0SE37vxHKTcYUdDhK2O5jlJ_WAdM"
    application.resourceTrackingMethod: "annotation+label" #use annotation for tracking but keep labels for compatibility with other tools